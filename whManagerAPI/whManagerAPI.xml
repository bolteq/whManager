<?xml version="1.0"?>
<doc>
    <assembly>
        <name>whManagerAPI</name>
    </assembly>
    <members>
        <member name="T:whManagerAPI.Controllers.CarController">
            <summary>
            Klasa kontrolera odpowiadającego za operacje na obiektach typu Car
            </summary> 
        </member>
        <member name="M:whManagerAPI.Controllers.CarController.#ctor(whManagerAPI.Services.ICarService)">
            <summary>
            Konstruktor kontrolera CarController wstrzykujący serwis do komunikacji z bazą danych
            @Params: ICarService
            </summary> 
        </member>
        <member name="M:whManagerAPI.Controllers.CarController.GetCar(System.Int32)">
            <summary>
            Metoda zwracająca obiekt typu Car o podanym ID
            @Params: int id
            </summary>
        </member>
        <member name="M:whManagerAPI.Controllers.CarController.GetCars">
            <summary>
            Metoda zwracająca obiekty typu Car
            </summary>
        </member>
        <member name="M:whManagerAPI.Controllers.CarController.AddCar(whManagerLIB.Models.Car)">
            <summary>
            Metoda przesyłająca do serwisu obiekt typu Car w celu aktualizacji/dodania w bazie danych
            @Params: Car car
            </summary>
        </member>
        <member name="M:whManagerAPI.Controllers.CarController.DeleteCar(System.Int32)">
            <summary>
            Metoda przesyłająca do serwisu ID, w celu usunięcia obiektu z bazy danych
            @Params: int id
            </summary>
        </member>
        <member name="T:whManagerAPI.Controllers.CompanyController">
            <summary>
            Kontroler odpowiedzialny za obsługę zapytań HTTP dotyczących obiektów Company
            </summary>
        </member>
        <member name="M:whManagerAPI.Controllers.CompanyController.#ctor(whManagerAPI.Services.ICompanyService)">
            <summary>
            Konstruktor kontrolera wstrzykujący serwis CompanyService do komunikacji z bazą danych
            </summary>
            <param name="companyService"></param>
        </member>
        <member name="M:whManagerAPI.Controllers.CompanyController.GetCompany(System.Int32)">
            <summary>
            Metoda HttpGet zwracająca obiekt Company o podanym ID
            </summary>
            <param name="id">Id</param>
            <returns>Obiekt company z bazy danych o podanym ID</returns>
        </member>
        <member name="M:whManagerAPI.Controllers.CompanyController.GetCompanies">
            <summary>
            Metoda HttpGet zwracająca listę obiektów Company
            </summary>
            <returns>Lista firm</returns>
        </member>
        <member name="M:whManagerAPI.Controllers.CompanyController.SetCompany(whManagerLIB.Models.Company)">
            <summary>
            Metoda HttpPost przesyłająca do serwisu otrzymany obiekt Company celem aktualizacji/dodania
            </summary>
            <param name="company">Obiekt do aktualizacji/dodania</param>
            <returns>BadRequest - niepowodzenie, Ok - powodzenie</returns>
        </member>
        <member name="M:whManagerAPI.Controllers.CompanyController.DeleteCompany(System.Int32)">
            <summary>
            Metoda przesyłająca do serwisu otrzymane id w celu usunięcia obiektu z bazy danych
            </summary>
            <param name="id">Id obiektu do usunięcia</param>
            <returns>BadRequest - niepowodzenie, Ok - powodzenie</returns>
        </member>
        <member name="T:whManagerAPI.Controllers.UserController">
            <summary>
            Kontroler API odpowiadający za operacje na użytkownikach
            </summary>
        </member>
        <member name="M:whManagerAPI.Controllers.UserController.#ctor(whManagerAPI.Services.IUserService)">
            <summary>
            Konstruktor wstrzykujący serwis UserService do komunikacji z bazą danych
            </summary>
            <param name="userService"></param>
        </member>
        <member name="M:whManagerAPI.Controllers.UserController.GetUser(System.Int32)">
            <summary>
            Metoda pobierająca użytkownika o podanym ID
            </summary>
            <param name="id">Id użytkownika</param>
            <returns>Wynik Ok oraz dane o użytkowniku jeśli znaleziono użytkownika, BadRequest jeśli nie znaleziono</returns>
        </member>
        <member name="M:whManagerAPI.Controllers.UserController.GetUsers">
            <summary>
            Metoda pobierająca użytkowników z bazy danych
            </summary>
            <returns>Ok z listą użytkowników jeśli udało się pobrać, BadRequest jeśli nie</returns>
        </member>
        <member name="M:whManagerAPI.Controllers.UserController.Login(whManagerLIB.Models.User)">
            <summary>
            Metoda HttpPost, przekazuje do serwisu otrzymanego użytkownika celem zalogowania
            </summary>
            <param name="userData">Użytkownik do zalogowania</param>
            <returns>Jeśli się powiedzie, zwraca użytkownika (serwis dodaje token), jeśli nie, zwraca BadRequest</returns>
        </member>
        <member name="M:whManagerAPI.Controllers.UserController.Register(whManagerLIB.Models.User)">
            <summary>
            Metoda HttpPost przekazująca do serwisu otrzymanego użytkownika w celu dodania do bazy danych
            </summary>
            <param name="user">Użytkownik do rejestracji</param>
            <returns>Ok jeśli udane, BadRequest jeśli nie udane</returns>
        </member>
        <member name="M:whManagerAPI.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>
            Metoda Delete przesyłająca do serwisu id użytkownika do usunięcia
            </summary>
            <param name="id">ID użytkownika do usunięcia</param>
            <returns>Ok jeśli użytkownik został usunięty, BadRequest jeśli nie</returns>
        </member>
        <member name="T:whManagerAPI.Helpers.AppSettings">
            <summary>
            Klasa pomocnicza zawierająca ustawienia zdefinioawne w appsettings.json
            </summary>
        </member>
        <member name="P:whManagerAPI.Helpers.AppSettings.Secret">
            <summary>
            Sekret służący do podpisywania tokenów dostępowych do API
            </summary>
        </member>
        <member name="T:whManagerAPI.Helpers.MyClaims">
            <summary>
            Klasa pomocnicza dla dostępu do nadanych uprawnień
            </summary>
        </member>
        <member name="F:whManagerAPI.Helpers.MyClaims.CompanyId">
            <summary>
            Pomocnicza zmienna statyczna pozwalająca na uniknięcie wpisywania bezpośrednio nazwy uprawnienia
            </summary>
        </member>
        <member name="T:whManagerAPI.Helpers.MyTokenDescriptor">
            <summary>
            Klasa generująca token dla użytkownika API
            </summary>
        </member>
        <member name="M:whManagerAPI.Helpers.MyTokenDescriptor.#ctor(whManagerAPI.Helpers.AppSettings,whManagerLIB.Models.User)">
            <summary>
            Konstruktor klasy MyTokenDescriptor
            </summary>
            <param name="appSettings">Ustawienia z appsettings.json</param>
            <param name="user">Użytkownik dla którego generowany jest token</param>
        </member>
        <member name="T:whManagerAPI.Helpers.PasswordCrypter">
            <summary>
            Serwis odpowiedzialny za szyfrowanie haseł
            </summary>
        </member>
        <member name="M:whManagerAPI.Helpers.PasswordCrypter.CreateSalt">
            <summary>
            Metoda tworząca losową sól do dodania do hasła
            </summary>
            <returns></returns>
        </member>
        <member name="M:whManagerAPI.Helpers.PasswordCrypter.CreateHash(System.String,System.String)">
            <summary>
            Metoda zwracająca hash SHA256 na podstawie przesłanego hasła w postaci czystego tekstu oraz soli
            </summary>
            <param name="password">Hasło w postaci czystego tekstu</param>
            <param name="salt">Sól do dodania do hasła</param>
            <returns></returns>
        </member>
        <member name="M:whManagerAPI.Helpers.PasswordCrypter.AreEqual(System.String,System.String,System.String)">
            <summary>
            Metoda sprawdzająca, czy przesłane hasło zgadza się z tym w bazie danych
            </summary>
            <param name="plainText">Hasło w postaci czystego tekstu</param>
            <param name="encryptedPassword">Zaszyfrowane hasło z bazy danych</param>
            <param name="salt">Sól dodana do hasła</param>
            <returns>True jeśli zgodne, False jeśli nie</returns>
        </member>
        <member name="T:whManagerAPI.Models.WHManagerDbContext">
            <summary>
            Klasa inicjalizująca bazę danych (Entity Framework Core)
            </summary>
        </member>
        <member name="M:whManagerAPI.Models.WHManagerDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{whManagerAPI.Models.WHManagerDbContext},whManagerAPI.Helpers.PasswordCrypter)">
            <summary>
            Konstruktor klasy WHManagerDbContext
            </summary>
            <param name="options">Opcje z Startup.cs</param>
            <param name="passwordCrypter">Serwis odpowiedzialny za szyfrowanie haseł</param>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.Warehouses">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu Warehouse w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.Users">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu User w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.Roles">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu Role w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.Deliveries">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu Delivery w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.DeliveryItems">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu DeliveryItem w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.DeliveryItemTypes">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu DeliveryItemType w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.Unloadings">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu Unloading w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.Cars">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu Car w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.Companies">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu Company w bazie danych
            </summary>
        </member>
        <member name="P:whManagerAPI.Models.WHManagerDbContext.Trailers">
            <summary>
            Reprezentuje tabelę zawierającą obiekty typu Trailer w bazie danych
            </summary>
        </member>
        <member name="M:whManagerAPI.Models.WHManagerDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Nadpisuje bazową funkcję EFCore tworzącą bazę danych,
            dodaje przykładowe dane.
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:whManagerAPI.Services.CarService">
            <summary>
            Serwis odpowiedzialny za operacje na obiektach typu Car w bazie danych
            </summary>
        </member>
        <member name="M:whManagerAPI.Services.CarService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,whManagerAPI.Models.WHManagerDbContext)">
            <summary>
            Konstruktor serwisu wstrzykujący zależności
            </summary>
            <param name="httpContextAccessor">Interfejs dostępu do HttpContextu</param>
            <param name="context">Klasa kontekstu bazy danych</param>
        </member>
        <member name="M:whManagerAPI.Services.CarService.GetCar(System.Int32)">
            <summary>
            Metoda pobierająca z bazy danych obiekt Car o podanym ID
            </summary>
            <param name="id">id obiektu</param>
            <returns>Pobrany obiekt</returns>
        </member>
        <member name="M:whManagerAPI.Services.CarService.AddCar(whManagerLIB.Models.Car)">
            <summary>
            Metoda dodająca/aktualizująca otrzymany obiekt Car do bazy danych
            </summary>
            <param name="car">obiekt do dodania/aktualizacji</param>
            <returns>Zaktualizowany/dodany obiekt</returns>
        </member>
        <member name="M:whManagerAPI.Services.CarService.DeleteCar(System.Int32)">
            <summary>
            Metoda usuwająca obiekt Car z bazy danych
            </summary>
            <param name="id">Id obiektu do usunięcia</param>
            <returns>true - sukces, false - niepowodzenie</returns>
        </member>
        <member name="T:whManagerAPI.Services.DeliveryItemTypeService">
            <summary>
            Serwis odpowiedzialny za operacje na obiektach DeliveryItemType w bazie danych
            </summary>
        </member>
        <member name="M:whManagerAPI.Services.DeliveryItemTypeService.#ctor(whManagerAPI.Models.WHManagerDbContext)">
            <summary>
            Konstruktor serwisu wstrzykujący zależności
            </summary>
            <param name="context">Klasa kontekstu bazy danych</param>
        </member>
        <member name="M:whManagerAPI.Services.DeliveryItemTypeService.GetDeliveryItemType(System.Int32)">
            <summary>
            Metoda pobierająca obiekt o przesłanym Id
            </summary>
            <param name="id">id obiektu</param>
            <returns>(awaitable) Pobrany obiekt DeliveryItemType</returns>
        </member>
        <member name="M:whManagerAPI.Services.DeliveryItemTypeService.GetDeliveryItemTypes">
            <summary>
            Metoda pobierająca obiekty z bazy danych
            </summary>
            <returns>IQueryable obiektów DeliveryItemType</returns>
        </member>
        <member name="M:whManagerAPI.Services.DeliveryItemTypeService.AddDeliveryItemType(whManagerLIB.Models.DeliveryItemType)">
            <summary>
            Dodaje/aktualizuje przesłany obiekt w bazie danych
            </summary>
            <param name="deliveryItemType">Obiekt do dodania/aktualizacji</param>
            <returns>Zaktualizowany obiekt typu DeliveryItemType</returns>
        </member>
        <member name="T:whManagerAPI.Services.DeliveryService">
            <summary>
            Serwis odpowiedzialny za operacje na obiektach Delivery w bazie danych
            </summary>
        </member>
        <member name="M:whManagerAPI.Services.DeliveryService.#ctor(whManagerAPI.Models.WHManagerDbContext,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Konstruktor serwisu wstrzykujący zależności
            </summary>
            <param name="context">Klasa kontektu bazy danych</param>
            <param name="httpContextAccessor">Interefejs HttpContextAccessor</param>
        </member>
        <member name="M:whManagerAPI.Services.DeliveryService.GetDelivery(System.Int32)">
            <summary>
            Pobiera z bazy danych obiekt Delivery o podanym ID
            </summary>
            <param name="id">id obiektu do zwrócenia</param>
            <returns>Obiekt Delivery o podanym ID</returns>
        </member>
        <member name="M:whManagerAPI.Services.DeliveryService.GetDeliveries">
            <summary>
            Pobiera z bazy danych obiekty typu Delivery
            </summary>
            <returns>Typ IQueryable obiektów Delivery</returns>
        </member>
        <member name="M:whManagerAPI.Services.DeliveryService.SetDelivery(whManagerLIB.Models.Delivery)">
            <summary>
            Aktualizuje/dodaje otrzymany obiekt typu Delivery w bazie danych
            </summary>
            <param name="delivery">Obiekt do dodania/aktualizacji</param>
            <returns>Zaktualizowany/dodany obiekt</returns>
        </member>
        <member name="T:whManagerAPI.Services.UserService">
            <summary>
            Klasa serwisu odpowiedzialnego za operacje na tabeli Users w bazie danych
            </summary>
        </member>
        <member name="M:whManagerAPI.Services.UserService.#ctor(whManagerAPI.Models.WHManagerDbContext,Microsoft.Extensions.Options.IOptions{whManagerAPI.Helpers.AppSettings},whManagerAPI.Helpers.PasswordCrypter,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Konstruktor serwisu UserService
            </summary>
            <param name="context">Kontekt bazy danych</param>
            <param name="appSettings">Klasa pomocnicza zawierająca ustawienia</param>
            <param name="passwordCrypter">Serwis odpowiedzialny za szyfrowanie haseł</param>
            <param name="httpContextAccessor">Interfejs pomocniczy służący do dostępu do HttpContextu z serwisu</param>
        </member>
        <member name="M:whManagerAPI.Services.UserService.Login(System.String,System.String)">
            <summary>
            Metoda odpowiedzialna za zalogowanie użytkownika o przesłanej nazwie i haśle
            </summary>
            <param name="username">nazwa użytkownika</param>
            <param name="password">hasło</param>
            <returns>Zwraca obiekt user z wygenerowanym tokenem dostępowym</returns>
        </member>
        <member name="M:whManagerAPI.Services.UserService.Register(whManagerLIB.Models.User)">
            <summary>
            Metoda dodająca przesłanego użytkownika do bazy danych
            </summary>
            <param name="user">Użytkownik do zarejestrowania</param>
            <returns></returns>
        </member>
        <member name="M:whManagerAPI.Services.UserService.GetUser(System.Int32)">
            <summary>
            Metoda pobierająca użytkownika o podanym ID z bazy danych
            </summary>
            <param name="id">ID użytkownika</param>
            <returns></returns>
        </member>
        <member name="M:whManagerAPI.Services.UserService.GetUsers">
            <summary>
            Metoda pobierająca użytkowników z bazy danych
            </summary>
            <returns></returns>
        </member>
        <member name="M:whManagerAPI.Services.UserService.DeleteUser(System.Int32)">
            <summary>
            Metoda usuwająca użytkownika o podanym ID z bazy danych
            </summary>
            <param name="id">Id użytkownika do usunięcia z bazy danych</param>
            <returns></returns>
        </member>
    </members>
</doc>
